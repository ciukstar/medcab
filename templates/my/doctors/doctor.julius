
[ { button: #{idButtonVideoCall},
    messageType: #{PushMsgTypeVideoCall},
    body: #{msgr $ MsgIncomingVideoCallFrom callerName},
    targetRoom: '@{RtcR rid $ VideoR rid pid sid (not polite)}',
    dialog: #{idDialogOutgoingVideoCall}
  },
  { button: #{idButtonAudioCall},
    messageType: #{PushMsgTypeAudioCall},
    body: #{msgr $ MsgIncomingAudioCallFrom callerName},
    targetRoom: '@{RtcR rid $ AudioR rid pid sid (not polite)}',
    dialog: #{idDialogOutgoingAudioCall}
  }
].forEach(({ button, messageType, body, targetRoom, dialog }) => {

  document.getElementById(button).addEventListener('click', (event) => {

    fetch('@{RtcR sid $ PushMessageR sid rid}', {
      method: 'POST',
      headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: new URLSearchParams({
	messageType: messageType,
	icon: '@{StaticR img_call_FILL0_wght400_GRAD0_opsz24_svg}',
	image: '@{AccountPhotoR uid AvatarColorDark}',
	body: body,
	targetRoom: targetRoom,
	targetPush: '@{RtcR rid $ PushMessageR rid sid}'
      })
    }).then(function (result) {
      document.getElementById(dialog).show();
    }).catch(function (err) {
      console.error(err);
    });
    
  });

});

[ { button: #{idButtonOutgoingVideoCallCancel},
    messageType: #{PushMsgTypeCancel},
    body: #{msgr $ MsgUserCanceledVideoCall callerName},
    dialog: #{idDialogOutgoingVideoCall}
  },
  { button: #{idButtonOutgoingAudioCallCancel},
    messageType: #{PushMsgTypeCancel},
    body: #{msgr $ MsgUserCanceledAudioCall callerName},
    dialog: #{idDialogOutgoingAudioCall}
  }
].forEach(({ button, messageType, body, dialog }) => {

  document.getElementById(button).addEventListener('click', (event) => {

    fetch('@{RtcR sid $ PushMessageR sid rid}', {
      method: 'POST',
      headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: new URLSearchParams({
	messageType: messageType,
	icon: '@{StaticR img_call_FILL0_wght400_GRAD0_opsz24_svg}',
	body: body,
	targetPush: '@{RtcR rid $ PushMessageR rid sid}'
      })
    }).then(function (result) {
      document.getElementById(dialog).close();
    }).catch(function (err) {
      console.error(err);
    });
    
  });
  
});


navigator.serviceWorker.addEventListener('message', function (message) {
  
  if (message.data.messageType === #{PushMsgTypeAcceptVideoCall}) {
    
    document.getElementById(#{idDialogOutgoingVideoCall}).close();
    
    const params = new URLSearchParams({
      backlink: '@{backlink}'
    });

    window.location.href = `@{RtcR sid (VideoR sid pid rid polite)}?${params}`;
    
  } else if (message.data.messageType === #{PushMsgTypeAcceptAudioCall}) {
    
    document.getElementById(#{idDialogOutgoingAudioCall}).close();
    
    const params = new URLSearchParams({
      backlink: '@{backlink}'
    });

    window.location.href = `@{RtcR sid (AudioR sid pid rid polite)}?${params}`;
    
  } else if (message.data.messageType === #{PushMsgTypeDeclineVideoCall}) {

    document.getElementById(#{idDialogOutgoingVideoCall}).close();
    document.getElementById(#{idDialogCallDeclined}).show();
        
  } else if (message.data.messageType === #{PushMsgTypeDeclineAudioCall}) {

    document.getElementById(#{idDialogOutgoingAudioCall}).close();
    document.getElementById(#{idDialogCallDeclined}).show();
        
  } else if (message.data.messageType === #{PushMsgTypeRefresh}) {
    
    window.location.reload();
    
  }
  
});

[ [#{idDialogOutgoingVideoCall}, #{idAudioOutgoingVideoCallRingtone}],
  [#{idDialogOutgoingAudioCall}, #{idAudioOutgoingAudioCallRingtone}]
].map(
  (ids) => ids.map((id) => document.getElementById(id))
).forEach(([dialog, audio]) => {
  dialog.addEventListener('opened', (e) => { audio.play(); });
  dialog.addEventListener('closed', (e) => { audio.pause(); });
});
