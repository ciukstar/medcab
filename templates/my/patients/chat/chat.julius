
Array.from(
  document.body.querySelectorAll('time.day-bubble[datetime]')
).forEach(function (x) {
  x.textContent = new Date(x.getAttribute('datetime')).toLocaleDateString(
    navigator.language, { weekday: 'short',year: 'numeric',month: 'long',day: 'numeric' }
  );
});

Array.from(
  document.body.querySelectorAll('time.time-bubble[datetime]')
).forEach(function (x) {
  x.textContent = new Date(x.getAttribute('datetime')).toLocaleTimeString(
    navigator.language, { hour: "numeric",minute: "numeric" }
  );
});

var url = document.URL,
    output = document.getElementById(#{idChatOutput}),
    form = document.getElementById(#{idMessageForm}),
    input = document.getElementById(#{idMessageInput}),
    conn;

output.scrollTop = output.scrollHeight;

input.addEventListener('input',function (e) {
  var btnSubmit = this.querySelector('md-filled-icon-button');
  btnSubmit.disabled = !(this.value && this.value.trim());
});

url = url.replace("http:", "ws:").replace("https:", "wss:");

conn = new WebSocket(url);

conn.onmessage = function(e) {
  var data = JSON.parse(e.data),
      p = document.createElement('p'),
      l = document.createElement('span'),
      t = document.createElement('time'),
      i = document.createElement('i'),
      w = document.createElement('span'),
      s = document.createElement('span');
  
  p.classList.add("bubble","body-medium");
  p.classList.add(... data.user == #{pack $ show $ fromSqlKey uid} ? ["user","right"] : ["interlocutor","left"]);
  l.classList.add("bubble-status-line");
  t.setAttribute('datetime',data.timemark);
  t.classList.add("body-small");
  i.style.fontFamily = "Material Symbols Outlined";
  w.classList.add("bubble-tail-out");
  s.classList.add("bubble-tail");
  
  p.appendChild(document.createTextNode(data.message));
  t.appendChild(document.createTextNode(new Date(data.timemark).toLocaleTimeString(
    navigator.language, {hour: 'numeric',minute: 'numeric'}
  )));

  w.appendChild(s);
  i.appendChild(document.createTextNode("done_all"));
  l.appendChild(t);
  l.appendChild(i);
  p.appendChild(l);
  p.appendChild(w);
  output.appendChild(p);
  output.scrollTop = output.scrollHeight;
};

form.addEventListener("submit", function(e){
  conn.send(input.value);
  input.value = "";
  var btnSubmit = this.querySelector('md-filled-icon-button');
  btnSubmit.disabled = true;
  e.preventDefault();
});

window.addEventListener("unload",function () {
  conn.close();
});
