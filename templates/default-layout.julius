
navigator.serviceWorker.register('@{ServiceWorkerR}', { scope: '/' });

navigator.serviceWorker.addEventListener('message', function (message) {

  [ { button: document.getElementById(#{idButtonDeclineIncomingVideoCall}),
      messageType: #{PushMsgTypeDeclineVideoCall},
      body: #{msgr $ MsgCalleeDeclinedTheCall calleeName},
      dialog: document.getElementById(#{idDialogIncomingVideoCall})
    },
    { button: document.getElementById(#{idButtonDeclineIncomingAudioCall}),
      messageType: #{PushMsgTypeDeclineAudioCall},
      body: #{msgr $ MsgCalleeDeclinedTheCall calleeName},
      dialog: document.getElementById(#{idDialogIncomingAudioCall})
    }
  ].forEach(({ button, messageType, body, dialog }) => {
  
    button.onclick = function (event) {
      fetch(message.data.targetPush, {
	method: 'POST',
	headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
	body: new URLSearchParams({
	  messageType: messageType,
	  title: message.data.title,
	  icon: '@{StaticR img_call_end_24dp_FILL0_wght400_GRAD0_opsz24_svg}',
	  body: body
	})
      }).then(function (result) {
	dialog.close();
      });
    };
    
  });

  [ { button: document.getElementById(#{idButtonAcceptIncomingVideoCall}),
      messageType: #{PushMsgTypeAcceptVideoCall},
      dialog: document.getElementById(#{idDialogIncomingVideoCall})
    },
    { button: document.getElementById(#{idButtonAcceptIncomingAudioCall}),
      messageType: #{PushMsgTypeAcceptAudioCall},
      dialog: document.getElementById(#{idDialogIncomingAudioCall})
    }
  ].forEach(({ button, messageType, dialog }) => {
    
    button.onclick = function (event) {
      fetch(message.data.targetPush, {
	method: 'POST',
	headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
	body: new URLSearchParams({
	  messageType: messageType,
	  title: message.data.title,
	  icon: message.data.icon,
	  body: #{msgr MsgCallAccepted}
	})
      }).then(function (result) {
	
	dialog.close();
	
	const params = new URLSearchParams({
	  backlink: '@{backlink}'
	});
	
	window.location.href = `${message.data.targetRoom}?${params}`;
        
      });
    };
    
  });
  
});

navigator.serviceWorker.addEventListener('message', function (message) {
  
  if (message.data.messageType === #{PushMsgTypeChat}) {

    if (message.data.targetRoom != #{currentPath}) {
      document.getElementById(#{idImgSenderPhoto}).src = message.data.image;
      document.getElementById(#{idFigcaptionSenderInfo}).textContent = message.data.senderName;
      document.getElementById(#{idNotificationBody}).textContent = message.data.body;
      document.getElementById(#{idButtonReplyNotification}).href = message.data.targetRoom;
      document.getElementById(#{idDialogChatNotification}).show();
    }
    
  } else if (message.data.messageType === #{PushMsgTypeCancel}) {
    
    document.getElementById(#{idDialogIncomingVideoCall}).close();
    document.getElementById(#{idDialogIncomingAudioCall}).close();
    document.getElementById(#{idMissedCallCaller}).textContent = message.data.body;
    document.getElementById(#{idDialogMissedCall}).show();
    
  } else if (message.data.messageType === #{PushMsgTypeVideoCall}) {
  
    document.getElementById(#{idImgPhotoIncomingVideoCall}).src = message.data.image;
    document.getElementById(#{idFigcaptionPhotoIncomingVideoCall}).textContent = message.data.body;
    document.getElementById(#{idDialogIncomingVideoCall}).show();
    
  } else if (message.data.messageType === #{PushMsgTypeAudioCall}) {
  
    document.getElementById(#{idImgPhotoIncomingAudioCall}).src = message.data.image;
    document.getElementById(#{idFigcaptionPhotoIncomingAudioCall}).textContent = message.data.body;
    document.getElementById(#{idDialogIncomingAudioCall}).show();
    
  }
  
});


document.getElementById(#{idButtonIgnoreNotification}).addEventListener('click', function (e) {
  document.getElementById(#{idDialogChatNotification}).close();
});


[ [ #{idDialogChatNotification}, #{idAudioIncomingChatRingtone} ],
  [ #{idDialogIncomingVideoCall}, #{idAudioIncomingVideoCallRingtone} ],
  [ #{idDialogIncomingAudioCall}, #{idAudioIncomingAudioCallRingtone} ]
].map(
  (ids) => ids.map((id) => document.getElementById(id))
).forEach(([dialog, audio]) => {
  dialog.addEventListener('opened', (e) => { audio.play(); });
  dialog.addEventListener('closed', (e) => { audio.pause(); });
});


window.addEventListener('load', (e) => {
  [ #{idDialogChatNotification}
  , #{idDialogIncomingVideoCall}
  , #{idDialogIncomingAudioCall}
  , #{idDialogMissedCall}
  ].forEach(x => { document.getElementById(x).style.visibility = 'visible'; });
});
